Linked List
===========
XOR Linked List
Sublist Search (Search a linked list in another list)
Partitioning a linked list around a given value and keeping the original order
Iteratively Reverse a linked list using only 2 pointers (An Interesting Method)
Find pair for given sum in a sorted singly linked without extra space
Find pairs with given sum in doubly linked list
Unrolled Linked List | Set 1 (Introduction)
Convert a Binary Tree to a Circular Doubly Link List
Subtract Two Numbers represented as Linked Lists
===
What is a (contiguous) subarray?
- All subsets with their indices in consecutive order are subarray.
- No. of subsets (non contiguous subarrays) = 2^n
- No. of contiguous subarray (with all distinct nos.) = nC0 + nC1 + .. nCn = n(n+1)/2

===
In an array having positive integers, except for one number which occurs odd number of times, all other numbers occur even number of times. Find the number. 
Example -  
Input : 2 5 9 1 5 1 8 2 8
Output: 9

Clue: a ^ a = 0 but 0 ^ a = a
/* O(n) Time complexity, O(1) space */
public void printOddOccurence(int[] a) {
	int result = a[0];
	for (int i = 1; i < a.length; i++) {
		result = result ^ a[i]
	}
	sysout(result)
}
Other options: O(n) and O(n) space 
	Map<Integer, Integer> map = new HashMap<>();
	for (int i = 0; i < input.length; i++) {
		if(map.containsKey(input[i])) 
				  map.put(input[i], map.get(input[i]) + 1);
		else
					map.put(input[i], 1);
    }

	for(Entry<Integer, Integer> entry : map.entrySet()) {
            if(entry.getValue() % 2 == 1) {
	                System.out.println("Number occurring odd number of times is "  + entry.getKey());
	                return;
	            }
	        }

===
Given an array of numbers and a positive integer 'n', find 'n'th most frequent occurring number in that array. 
If there are more than one numbers which are occurring 'n'th most frequently, then you can return any one of such integers.

Example:  For the input array {1,2,2,2,4,4,4,4,5,5,5,5,5,7,7,8,8,8,8}
if n = 1, then the output returned should be 5 because it is the most frequent number,
if n = 2, output can be either 4 or 8 since any of these numbers could be considered as the 2nd most frequent number,
if n = 3, again output can be either 4 or 8
if n = 4, output should be 2.